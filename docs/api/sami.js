
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:phootwork" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork.html">phootwork</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:phootwork_collection" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/collection.html">collection</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:phootwork_collection_AbstractCollection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/AbstractCollection.html">AbstractCollection</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_AbstractList" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/AbstractList.html">AbstractList</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_ArrayList" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/ArrayList.html">ArrayList</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_Collection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/Collection.html">Collection</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_CollectionUtils" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/CollectionUtils.html">CollectionUtils</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_Map" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/Map.html">Map</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_Queue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/Queue.html">Queue</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_Set" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/Set.html">Set</a>                    </div>                </li>                            <li data-name="class:phootwork_collection_Stack" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/collection/Stack.html">Stack</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:phootwork_file" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/file.html">file</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:phootwork_file_exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/file/exception.html">exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:phootwork_file_exception_FileException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/file/exception/FileException.html">FileException</a>                    </div>                </li>                            <li data-name="class:phootwork_file_exception_FileNotFoundException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/file/exception/FileNotFoundException.html">FileNotFoundException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:phootwork_file_Directory" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/file/Directory.html">Directory</a>                    </div>                </li>                            <li data-name="class:phootwork_file_File" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/file/File.html">File</a>                    </div>                </li>                            <li data-name="class:phootwork_file_FileDescriptor" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/file/FileDescriptor.html">FileDescriptor</a>                    </div>                </li>                            <li data-name="class:phootwork_file_FileOperationTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/file/FileOperationTrait.html">FileOperationTrait</a>                    </div>                </li>                            <li data-name="class:phootwork_file_Path" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/file/Path.html">Path</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:phootwork_json" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/json.html">json</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:phootwork_json_Json" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/json/Json.html">Json</a>                    </div>                </li>                            <li data-name="class:phootwork_json_JsonException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/json/JsonException.html">JsonException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:phootwork_lang" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/lang.html">lang</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:phootwork_lang_inflector" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/lang/inflector.html">inflector</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:phootwork_lang_inflector_Inflector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/inflector/Inflector.html">Inflector</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_inflector_InflectorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/inflector/InflectorInterface.html">InflectorInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:phootwork_lang_parts" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/lang/parts.html">parts</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:phootwork_lang_parts_AccessorsPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/AccessorsPart.html">AccessorsPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_AddPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/AddPart.html">AddPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_ArrayConversionsPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/ArrayConversionsPart.html">ArrayConversionsPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_CheckerPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/CheckerPart.html">CheckerPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_ComparisonPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/ComparisonPart.html">ComparisonPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_EachPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/EachPart.html">EachPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_IndexFindersPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/IndexFindersPart.html">IndexFindersPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_InsertPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/InsertPart.html">InsertPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_InternalPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/InternalPart.html">InternalPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_PopPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/PopPart.html">PopPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_ReducePart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/ReducePart.html">ReducePart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_RemovePart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/RemovePart.html">RemovePart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_ReversePart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/ReversePart.html">ReversePart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_SearchPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/SearchPart.html">SearchPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_SortAssocPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/SortAssocPart.html">SortAssocPart</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_parts_TransformationsPart" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/lang/parts/TransformationsPart.html">TransformationsPart</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:phootwork_lang_AbstractArray" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/AbstractArray.html">AbstractArray</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_ArrayObject" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/ArrayObject.html">ArrayObject</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_Arrayable" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/Arrayable.html">Arrayable</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_Comparable" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/Comparable.html">Comparable</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_ComparableComparator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/ComparableComparator.html">ComparableComparator</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_Comparator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/Comparator.html">Comparator</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_StringComparator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/StringComparator.html">StringComparator</a>                    </div>                </li>                            <li data-name="class:phootwork_lang_Text" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/lang/Text.html">Text</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:phootwork_tokenizer" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/tokenizer.html">tokenizer</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:phootwork_tokenizer_PhpTokenizer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/tokenizer/PhpTokenizer.html">PhpTokenizer</a>                    </div>                </li>                            <li data-name="class:phootwork_tokenizer_Token" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/tokenizer/Token.html">Token</a>                    </div>                </li>                            <li data-name="class:phootwork_tokenizer_TokenCollection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/tokenizer/TokenCollection.html">TokenCollection</a>                    </div>                </li>                            <li data-name="class:phootwork_tokenizer_TokenVisitorInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/tokenizer/TokenVisitorInterface.html">TokenVisitorInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:phootwork_xml" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/xml.html">xml</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:phootwork_xml_exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="phootwork/xml/exception.html">exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:phootwork_xml_exception_XmlException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="phootwork/xml/exception/XmlException.html">XmlException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:phootwork_xml_XmlParser" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/xml/XmlParser.html">XmlParser</a>                    </div>                </li>                            <li data-name="class:phootwork_xml_XmlParserNoopVisitor" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/xml/XmlParserNoopVisitor.html">XmlParserNoopVisitor</a>                    </div>                </li>                            <li data-name="class:phootwork_xml_XmlParserVisitorInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="phootwork/xml/XmlParserVisitorInterface.html">XmlParserVisitorInterface</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "phootwork.html", "name": "phootwork", "doc": "Namespace phootwork"},{"type": "Namespace", "link": "phootwork/collection.html", "name": "phootwork\\collection", "doc": "Namespace phootwork\\collection"},{"type": "Namespace", "link": "phootwork/file.html", "name": "phootwork\\file", "doc": "Namespace phootwork\\file"},{"type": "Namespace", "link": "phootwork/file/exception.html", "name": "phootwork\\file\\exception", "doc": "Namespace phootwork\\file\\exception"},{"type": "Namespace", "link": "phootwork/json.html", "name": "phootwork\\json", "doc": "Namespace phootwork\\json"},{"type": "Namespace", "link": "phootwork/lang.html", "name": "phootwork\\lang", "doc": "Namespace phootwork\\lang"},{"type": "Namespace", "link": "phootwork/lang/inflector.html", "name": "phootwork\\lang\\inflector", "doc": "Namespace phootwork\\lang\\inflector"},{"type": "Namespace", "link": "phootwork/lang/parts.html", "name": "phootwork\\lang\\parts", "doc": "Namespace phootwork\\lang\\parts"},{"type": "Namespace", "link": "phootwork/tokenizer.html", "name": "phootwork\\tokenizer", "doc": "Namespace phootwork\\tokenizer"},{"type": "Namespace", "link": "phootwork/xml.html", "name": "phootwork\\xml", "doc": "Namespace phootwork\\xml"},{"type": "Namespace", "link": "phootwork/xml/exception.html", "name": "phootwork\\xml\\exception", "doc": "Namespace phootwork\\xml\\exception"},
            {"type": "Interface", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/Collection.html", "name": "phootwork\\collection\\Collection", "doc": "&quot;Collection interface&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_clear", "name": "phootwork\\collection\\Collection::clear", "doc": "&quot;Resets the collection&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_isEmpty", "name": "phootwork\\collection\\Collection::isEmpty", "doc": "&quot;Checks whether this collection is empty&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_contains", "name": "phootwork\\collection\\Collection::contains", "doc": "&quot;Checks whether the given element is in this collection&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_size", "name": "phootwork\\collection\\Collection::size", "doc": "&quot;Returns the amount of elements in this collection&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_toArray", "name": "phootwork\\collection\\Collection::toArray", "doc": "&quot;Returns the collection as an array&quot;"},
            
            {"type": "Interface", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/Arrayable.html", "name": "phootwork\\lang\\Arrayable", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\Arrayable", "fromLink": "phootwork/lang/Arrayable.html", "link": "phootwork/lang/Arrayable.html#method_toArray", "name": "phootwork\\lang\\Arrayable::toArray", "doc": "&quot;Array representation of the object&quot;"},
            
            {"type": "Interface", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/Comparable.html", "name": "phootwork\\lang\\Comparable", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\Comparable", "fromLink": "phootwork/lang/Comparable.html", "link": "phootwork/lang/Comparable.html#method_compareTo", "name": "phootwork\\lang\\Comparable::compareTo", "doc": "&quot;Compares to another object&quot;"},
            
            {"type": "Interface", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/Comparator.html", "name": "phootwork\\lang\\Comparator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\Comparator", "fromLink": "phootwork/lang/Comparator.html", "link": "phootwork/lang/Comparator.html#method_compare", "name": "phootwork\\lang\\Comparator::compare", "doc": "&quot;Compares two objects&quot;"},
            
            {"type": "Interface", "fromName": "phootwork\\lang\\inflector", "fromLink": "phootwork/lang/inflector.html", "link": "phootwork/lang/inflector/InflectorInterface.html", "name": "phootwork\\lang\\inflector\\InflectorInterface", "doc": "&quot;The generic interface to create a plural form of a name.&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_getPluralForm", "name": "phootwork\\lang\\inflector\\InflectorInterface::getPluralForm", "doc": "&quot;Generate a plural name based on the passed in root.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_getSingularForm", "name": "phootwork\\lang\\inflector\\InflectorInterface::getSingularForm", "doc": "&quot;Generate a singular name based on the passed in root.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_isPlural", "name": "phootwork\\lang\\inflector\\InflectorInterface::isPlural", "doc": "&quot;Check if $root word is plural.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_isSingular", "name": "phootwork\\lang\\inflector\\InflectorInterface::isSingular", "doc": "&quot;Check if $root word is singular.&quot;"},
            
            {"type": "Interface", "fromName": "phootwork\\tokenizer", "fromLink": "phootwork/tokenizer.html", "link": "phootwork/tokenizer/TokenVisitorInterface.html", "name": "phootwork\\tokenizer\\TokenVisitorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\tokenizer\\TokenVisitorInterface", "fromLink": "phootwork/tokenizer/TokenVisitorInterface.html", "link": "phootwork/tokenizer/TokenVisitorInterface.html#method_visitToken", "name": "phootwork\\tokenizer\\TokenVisitorInterface::visitToken", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "phootwork\\xml", "fromLink": "phootwork/xml.html", "link": "phootwork/xml/XmlParserVisitorInterface.html", "name": "phootwork\\xml\\XmlParserVisitorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitElementStart", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitElementStart", "doc": "&quot;visits the start of an element&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitElementEnd", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitElementEnd", "doc": "&quot;visits the end of an element&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitCharacterData", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitCharacterData", "doc": "&quot;visits character data&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitProcessingInstruction", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitProcessingInstruction", "doc": "&quot;visits a processing instruction&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitNotationDeclaration", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitNotationDeclaration", "doc": "&quot;visits a notation declaration&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitUnparsedEntityDeclaration", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitUnparsedEntityDeclaration", "doc": "&quot;visits an unparsed entity declaration&quot;"},
            
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/AbstractCollection.html", "name": "phootwork\\collection\\AbstractCollection", "doc": "&quot;AbstractCollection providing implementation for the Collection interface.&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\AbstractCollection", "fromLink": "phootwork/collection/AbstractCollection.html", "link": "phootwork/collection/AbstractCollection.html#method_clear", "name": "phootwork\\collection\\AbstractCollection::clear", "doc": "&quot;Remove all elements from the collection.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractCollection", "fromLink": "phootwork/collection/AbstractCollection.html", "link": "phootwork/collection/AbstractCollection.html#method_rewind", "name": "phootwork\\collection\\AbstractCollection::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractCollection", "fromLink": "phootwork/collection/AbstractCollection.html", "link": "phootwork/collection/AbstractCollection.html#method_current", "name": "phootwork\\collection\\AbstractCollection::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractCollection", "fromLink": "phootwork/collection/AbstractCollection.html", "link": "phootwork/collection/AbstractCollection.html#method_key", "name": "phootwork\\collection\\AbstractCollection::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractCollection", "fromLink": "phootwork/collection/AbstractCollection.html", "link": "phootwork/collection/AbstractCollection.html#method_next", "name": "phootwork\\collection\\AbstractCollection::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractCollection", "fromLink": "phootwork/collection/AbstractCollection.html", "link": "phootwork/collection/AbstractCollection.html#method_valid", "name": "phootwork\\collection\\AbstractCollection::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/AbstractList.html", "name": "phootwork\\collection\\AbstractList", "doc": "&quot;Abstract class for all list-like collections&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\AbstractList", "fromLink": "phootwork/collection/AbstractList.html", "link": "phootwork/collection/AbstractList.html#method_reverseSort", "name": "phootwork\\collection\\AbstractList::reverseSort", "doc": "&quot;Sorts the collection in reverse order&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractList", "fromLink": "phootwork/collection/AbstractList.html", "link": "phootwork/collection/AbstractList.html#method_indexOf", "name": "phootwork\\collection\\AbstractList::indexOf", "doc": "&quot;Returns the index of the given element or null if the element can&#039;t be found&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractList", "fromLink": "phootwork/collection/AbstractList.html", "link": "phootwork/collection/AbstractList.html#method_findLastIndex", "name": "phootwork\\collection\\AbstractList::findLastIndex", "doc": "&quot;Searches the array with a given callback and returns the index for the last element if found.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\AbstractList", "fromLink": "phootwork/collection/AbstractList.html", "link": "phootwork/collection/AbstractList.html#method_findIndex", "name": "phootwork\\collection\\AbstractList::findIndex", "doc": "&quot;Searches the array with a given callback and returns the index for the first element if found.&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/ArrayList.html", "name": "phootwork\\collection\\ArrayList", "doc": "&quot;Represents a List&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\ArrayList", "fromLink": "phootwork/collection/ArrayList.html", "link": "phootwork/collection/ArrayList.html#method___construct", "name": "phootwork\\collection\\ArrayList::__construct", "doc": "&quot;Creates a new ArrayList&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\ArrayList", "fromLink": "phootwork/collection/ArrayList.html", "link": "phootwork/collection/ArrayList.html#method_removeByIndex", "name": "phootwork\\collection\\ArrayList::removeByIndex", "doc": "&quot;Removes an element from the list by its index.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\ArrayList", "fromLink": "phootwork/collection/ArrayList.html", "link": "phootwork/collection/ArrayList.html#method_get", "name": "phootwork\\collection\\ArrayList::get", "doc": "&quot;Returns the element at the given index (or null if the index isn&#039;t present)&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/Collection.html", "name": "phootwork\\collection\\Collection", "doc": "&quot;Collection interface&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_clear", "name": "phootwork\\collection\\Collection::clear", "doc": "&quot;Resets the collection&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_isEmpty", "name": "phootwork\\collection\\Collection::isEmpty", "doc": "&quot;Checks whether this collection is empty&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_contains", "name": "phootwork\\collection\\Collection::contains", "doc": "&quot;Checks whether the given element is in this collection&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_size", "name": "phootwork\\collection\\Collection::size", "doc": "&quot;Returns the amount of elements in this collection&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Collection", "fromLink": "phootwork/collection/Collection.html", "link": "phootwork/collection/Collection.html#method_toArray", "name": "phootwork\\collection\\Collection::toArray", "doc": "&quot;Returns the collection as an array&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/CollectionUtils.html", "name": "phootwork\\collection\\CollectionUtils", "doc": "&quot;CollectionUtils help to transform data recursively into collections.&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\CollectionUtils", "fromLink": "phootwork/collection/CollectionUtils.html", "link": "phootwork/collection/CollectionUtils.html#method_fromCollection", "name": "phootwork\\collection\\CollectionUtils::fromCollection", "doc": "&quot;Returns a proper collection for the given array (also transforms nested collections)\n(experimental API)&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\CollectionUtils", "fromLink": "phootwork/collection/CollectionUtils.html", "link": "phootwork/collection/CollectionUtils.html#method_toMap", "name": "phootwork\\collection\\CollectionUtils::toMap", "doc": "&quot;Recursively transforms data into a map (on the first level, deeper levels\ntransformed to an appropriate collection) (experimental API)&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\CollectionUtils", "fromLink": "phootwork/collection/CollectionUtils.html", "link": "phootwork/collection/CollectionUtils.html#method_toList", "name": "phootwork\\collection\\CollectionUtils::toList", "doc": "&quot;Recursively transforms data into a list (on the first level, deeper levels\ntransformed to an appropriate collection) (experimental API)&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\CollectionUtils", "fromLink": "phootwork/collection/CollectionUtils.html", "link": "phootwork/collection/CollectionUtils.html#method_toArrayRecursive", "name": "phootwork\\collection\\CollectionUtils::toArrayRecursive", "doc": "&quot;Recursively exports a collection to an array&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/Map.html", "name": "phootwork\\collection\\Map", "doc": "&quot;Represents a Map&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method___construct", "name": "phootwork\\collection\\Map::__construct", "doc": "&quot;Creates a new Map&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_set", "name": "phootwork\\collection\\Map::set", "doc": "&quot;Sets an element with the given key on that map&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_get", "name": "phootwork\\collection\\Map::get", "doc": "&quot;Returns the element for the given key or your value, if the key doesn&#039;t exist.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_getKey", "name": "phootwork\\collection\\Map::getKey", "doc": "&quot;Returns the key for the given value&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_setAll", "name": "phootwork\\collection\\Map::setAll", "doc": "&quot;Sets many elements on that map&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_remove", "name": "phootwork\\collection\\Map::remove", "doc": "&quot;Removes and returns an element from the map by the given key. Returns null if the key\ndoes not exist.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_keys", "name": "phootwork\\collection\\Map::keys", "doc": "&quot;Returns all keys as Set&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_values", "name": "phootwork\\collection\\Map::values", "doc": "&quot;Returns all values as ArrayList&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_has", "name": "phootwork\\collection\\Map::has", "doc": "&quot;Returns whether the key exist.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_sort", "name": "phootwork\\collection\\Map::sort", "doc": "&quot;Sorts the map&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_each", "name": "phootwork\\collection\\Map::each", "doc": "&quot;Iterates the map and calls the callback function with the current key and value as parameters&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_findKey", "name": "phootwork\\collection\\Map::findKey", "doc": "&quot;Searches the collection with a given callback and returns the key for the first element if found.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_findLastKey", "name": "phootwork\\collection\\Map::findLastKey", "doc": "&quot;Searches the collection with a given callback and returns the key for the last element if found.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_offsetSet", "name": "phootwork\\collection\\Map::offsetSet", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_offsetExists", "name": "phootwork\\collection\\Map::offsetExists", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_offsetUnset", "name": "phootwork\\collection\\Map::offsetUnset", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Map", "fromLink": "phootwork/collection/Map.html", "link": "phootwork/collection/Map.html#method_offsetGet", "name": "phootwork\\collection\\Map::offsetGet", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/Queue.html", "name": "phootwork\\collection\\Queue", "doc": "&quot;Represents a Queue&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\Queue", "fromLink": "phootwork/collection/Queue.html", "link": "phootwork/collection/Queue.html#method___construct", "name": "phootwork\\collection\\Queue::__construct", "doc": "&quot;Creates a new Queue&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Queue", "fromLink": "phootwork/collection/Queue.html", "link": "phootwork/collection/Queue.html#method_enqueue", "name": "phootwork\\collection\\Queue::enqueue", "doc": "&quot;Enqueues an element&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Queue", "fromLink": "phootwork/collection/Queue.html", "link": "phootwork/collection/Queue.html#method_enqueueAll", "name": "phootwork\\collection\\Queue::enqueueAll", "doc": "&quot;Enqueues many elements&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Queue", "fromLink": "phootwork/collection/Queue.html", "link": "phootwork/collection/Queue.html#method_peek", "name": "phootwork\\collection\\Queue::peek", "doc": "&quot;Returns the element at the head or null if the queue is empty but doesn&#039;t remove that element&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Queue", "fromLink": "phootwork/collection/Queue.html", "link": "phootwork/collection/Queue.html#method_poll", "name": "phootwork\\collection\\Queue::poll", "doc": "&quot;Removes and returns the element at the head or null if the is empty&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/Set.html", "name": "phootwork\\collection\\Set", "doc": "&quot;Represents a Set&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\Set", "fromLink": "phootwork/collection/Set.html", "link": "phootwork/collection/Set.html#method___construct", "name": "phootwork\\collection\\Set::__construct", "doc": "&quot;Creates a new Set&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Set", "fromLink": "phootwork/collection/Set.html", "link": "phootwork/collection/Set.html#method_add", "name": "phootwork\\collection\\Set::add", "doc": "&quot;Adds an element to that set&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\collection", "fromLink": "phootwork/collection.html", "link": "phootwork/collection/Stack.html", "name": "phootwork\\collection\\Stack", "doc": "&quot;Represents a Stack&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\collection\\Stack", "fromLink": "phootwork/collection/Stack.html", "link": "phootwork/collection/Stack.html#method___construct", "name": "phootwork\\collection\\Stack::__construct", "doc": "&quot;Creates a new ArrayList&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Stack", "fromLink": "phootwork/collection/Stack.html", "link": "phootwork/collection/Stack.html#method_push", "name": "phootwork\\collection\\Stack::push", "doc": "&quot;Pushes an element onto the stack&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Stack", "fromLink": "phootwork/collection/Stack.html", "link": "phootwork/collection/Stack.html#method_pushAll", "name": "phootwork\\collection\\Stack::pushAll", "doc": "&quot;Pushes many elements onto the stack&quot;"},
                    {"type": "Method", "fromName": "phootwork\\collection\\Stack", "fromLink": "phootwork/collection/Stack.html", "link": "phootwork/collection/Stack.html#method_peek", "name": "phootwork\\collection\\Stack::peek", "doc": "&quot;Returns the element at the head or null if the stack is empty but doesn&#039;t remove that element&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\file", "fromLink": "phootwork/file.html", "link": "phootwork/file/Directory.html", "name": "phootwork\\file\\Directory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method___construct", "name": "phootwork\\file\\Directory::__construct", "doc": "&quot;Directory constructor.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method_make", "name": "phootwork\\file\\Directory::make", "doc": "&quot;Creates the directory&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method_delete", "name": "phootwork\\file\\Directory::delete", "doc": "&quot;Recursively deletes the directory&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method_current", "name": "phootwork\\file\\Directory::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method_key", "name": "phootwork\\file\\Directory::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method_next", "name": "phootwork\\file\\Directory::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method_rewind", "name": "phootwork\\file\\Directory::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method_valid", "name": "phootwork\\file\\Directory::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Directory", "fromLink": "phootwork/file/Directory.html", "link": "phootwork/file/Directory.html#method___toString", "name": "phootwork\\file\\Directory::__toString", "doc": "&quot;String representation of this directory as pathname&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\file", "fromLink": "phootwork/file.html", "link": "phootwork/file/File.html", "name": "phootwork\\file\\File", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\file\\File", "fromLink": "phootwork/file/File.html", "link": "phootwork/file/File.html#method___construct", "name": "phootwork\\file\\File::__construct", "doc": "&quot;File constructor.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\File", "fromLink": "phootwork/file/File.html", "link": "phootwork/file/File.html#method_read", "name": "phootwork\\file\\File::read", "doc": "&quot;Reads contents from the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\File", "fromLink": "phootwork/file/File.html", "link": "phootwork/file/File.html#method_write", "name": "phootwork\\file\\File::write", "doc": "&quot;Writes contents to the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\File", "fromLink": "phootwork/file/File.html", "link": "phootwork/file/File.html#method_touch", "name": "phootwork\\file\\File::touch", "doc": "&quot;Touches the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\File", "fromLink": "phootwork/file/File.html", "link": "phootwork/file/File.html#method_delete", "name": "phootwork\\file\\File::delete", "doc": "&quot;Deletes the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\File", "fromLink": "phootwork/file/File.html", "link": "phootwork/file/File.html#method___toString", "name": "phootwork\\file\\File::__toString", "doc": "&quot;String representation of this file as pathname&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\file", "fromLink": "phootwork/file.html", "link": "phootwork/file/FileDescriptor.html", "name": "phootwork\\file\\FileDescriptor", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method_fromFileInfo", "name": "phootwork\\file\\FileDescriptor::fromFileInfo", "doc": "&quot;Creates a new FileDescriptor from SplFileInfo&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method___construct", "name": "phootwork\\file\\FileDescriptor::__construct", "doc": "&quot;FileDescriptor constructor.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method_isFile", "name": "phootwork\\file\\FileDescriptor::isFile", "doc": "&quot;Tells whether this is a regular file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method_isDot", "name": "phootwork\\file\\FileDescriptor::isDot", "doc": "&quot;Tells whether the filename is a &#039;.&#039; or &#039;.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method_isDir", "name": "phootwork\\file\\FileDescriptor::isDir", "doc": "&quot;Tells whether this is a directory&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method_toFile", "name": "phootwork\\file\\FileDescriptor::toFile", "doc": "&quot;Converts this file descriptor into a file object&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method_toDirectory", "name": "phootwork\\file\\FileDescriptor::toDirectory", "doc": "&quot;Converts this file descriptor into a directory object&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method_delete", "name": "phootwork\\file\\FileDescriptor::delete", "doc": "&quot;Deletes the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileDescriptor", "fromLink": "phootwork/file/FileDescriptor.html", "link": "phootwork/file/FileDescriptor.html#method___toString", "name": "phootwork\\file\\FileDescriptor::__toString", "doc": "&quot;String representation of this file as pathname&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\file", "fromLink": "phootwork/file.html", "link": "phootwork/file/FileOperationTrait.html", "name": "phootwork\\file\\FileOperationTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method___construct", "name": "phootwork\\file\\FileOperationTrait::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_create", "name": "phootwork\\file\\FileOperationTrait::create", "doc": "&quot;Static instantiator&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getExtension", "name": "phootwork\\file\\FileOperationTrait::getExtension", "doc": "&quot;Returns the file extensions&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getFilename", "name": "phootwork\\file\\FileOperationTrait::getFilename", "doc": "&quot;Returns the filename&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getDirname", "name": "phootwork\\file\\FileOperationTrait::getDirname", "doc": "&quot;Gets the path without filename&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getPathname", "name": "phootwork\\file\\FileOperationTrait::getPathname", "doc": "&quot;Gets the path to the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_toPath", "name": "phootwork\\file\\FileOperationTrait::toPath", "doc": "&quot;Converts the path into a path object&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getLastAccessedAt", "name": "phootwork\\file\\FileOperationTrait::getLastAccessedAt", "doc": "&quot;Gets last access time.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getCreatedAt", "name": "phootwork\\file\\FileOperationTrait::getCreatedAt", "doc": "&quot;Gets the created time.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getModifiedAt", "name": "phootwork\\file\\FileOperationTrait::getModifiedAt", "doc": "&quot;Gets last modified time.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getInode", "name": "phootwork\\file\\FileOperationTrait::getInode", "doc": "&quot;Gets file inode&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getGroup", "name": "phootwork\\file\\FileOperationTrait::getGroup", "doc": "&quot;Gets file group&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getOwner", "name": "phootwork\\file\\FileOperationTrait::getOwner", "doc": "&quot;Gets file owner&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getPermissions", "name": "phootwork\\file\\FileOperationTrait::getPermissions", "doc": "&quot;Gets file permissions&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_exists", "name": "phootwork\\file\\FileOperationTrait::exists", "doc": "&quot;Checks its existance&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_isExecutable", "name": "phootwork\\file\\FileOperationTrait::isExecutable", "doc": "&quot;Tells whether is executable&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_isReadable", "name": "phootwork\\file\\FileOperationTrait::isReadable", "doc": "&quot;Tells whether is readable&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_isWritable", "name": "phootwork\\file\\FileOperationTrait::isWritable", "doc": "&quot;Tells whether is writable&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_isLink", "name": "phootwork\\file\\FileOperationTrait::isLink", "doc": "&quot;Tells whether the filename is a symbolic link&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_getLinkTarget", "name": "phootwork\\file\\FileOperationTrait::getLinkTarget", "doc": "&quot;Returns the target if this is a symbolic link&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_setGroup", "name": "phootwork\\file\\FileOperationTrait::setGroup", "doc": "&quot;Attempts to change the group.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_setMode", "name": "phootwork\\file\\FileOperationTrait::setMode", "doc": "&quot;Attempts to change the mode.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_setOwner", "name": "phootwork\\file\\FileOperationTrait::setOwner", "doc": "&quot;Changes file owner&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_copy", "name": "phootwork\\file\\FileOperationTrait::copy", "doc": "&quot;Copies the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_move", "name": "phootwork\\file\\FileOperationTrait::move", "doc": "&quot;Moves the file&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_linkTo", "name": "phootwork\\file\\FileOperationTrait::linkTo", "doc": "&quot;Creates a symlink to the given destination&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\FileOperationTrait", "fromLink": "phootwork/file/FileOperationTrait.html", "link": "phootwork/file/FileOperationTrait.html#method_delete", "name": "phootwork\\file\\FileOperationTrait::delete", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\file", "fromLink": "phootwork/file.html", "link": "phootwork/file/Path.html", "name": "phootwork\\file\\Path", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method___construct", "name": "phootwork\\file\\Path::__construct", "doc": "&quot;Path constructor.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_getExtension", "name": "phootwork\\file\\Path::getExtension", "doc": "&quot;Returns the extension&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_getFilename", "name": "phootwork\\file\\Path::getFilename", "doc": "&quot;Returns the filename&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_getDirname", "name": "phootwork\\file\\Path::getDirname", "doc": "&quot;Gets the path without filename&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_getPathname", "name": "phootwork\\file\\Path::getPathname", "doc": "&quot;Gets the full pathname&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_isStream", "name": "phootwork\\file\\Path::isStream", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_setExtension", "name": "phootwork\\file\\Path::setExtension", "doc": "&quot;Changes the extension of this path&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_addTrailingSeparator", "name": "phootwork\\file\\Path::addTrailingSeparator", "doc": "&quot;Returns a path with the same segments as this path but with a\ntrailing separator added (if not already existent).&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_append", "name": "phootwork\\file\\Path::append", "doc": "&quot;Returns the path obtained from the concatenation of the given path&#039;s\nsegments\/string to the end of this path.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_hasTrailingSeparator", "name": "phootwork\\file\\Path::hasTrailingSeparator", "doc": "&quot;Returns whether this path has a trailing separator.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_isEmpty", "name": "phootwork\\file\\Path::isEmpty", "doc": "&quot;Returns whether this path is empty&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_isAbsolute", "name": "phootwork\\file\\Path::isAbsolute", "doc": "&quot;Returns whether this path is an absolute path.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_isPrefixOf", "name": "phootwork\\file\\Path::isPrefixOf", "doc": "&quot;Checks whether this path is the prefix of another path&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_lastSegment", "name": "phootwork\\file\\Path::lastSegment", "doc": "&quot;Returns the last segment of this path, or null if it does not have any segments.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_makeRelativeTo", "name": "phootwork\\file\\Path::makeRelativeTo", "doc": "&quot;Makes the path relative to another given path&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_matchingFirstSegments", "name": "phootwork\\file\\Path::matchingFirstSegments", "doc": "&quot;Returns a count of the number of segments which match in this\npath and the given path, comparing in increasing segment number order.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_removeExtension", "name": "phootwork\\file\\Path::removeExtension", "doc": "&quot;Returns a new path which is the same as this path but with the file extension removed.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_removeFirstSegments", "name": "phootwork\\file\\Path::removeFirstSegments", "doc": "&quot;Returns a copy of this path with the given number of segments removed from the beginning.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_removeLastSegments", "name": "phootwork\\file\\Path::removeLastSegments", "doc": "&quot;Returns a copy of this path with the given number of segments removed from the end.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_removeTrailingSeparator", "name": "phootwork\\file\\Path::removeTrailingSeparator", "doc": "&quot;Returns a copy of this path with the same segments as this path but with a trailing separator removed.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_segment", "name": "phootwork\\file\\Path::segment", "doc": "&quot;Returns the specified segment of this path, or null if the path does not have such a segment.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_segmentCount", "name": "phootwork\\file\\Path::segmentCount", "doc": "&quot;Returns the number of segments in this path.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_segments", "name": "phootwork\\file\\Path::segments", "doc": "&quot;Returns the segments in this path in order.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_toFileDescriptor", "name": "phootwork\\file\\Path::toFileDescriptor", "doc": "&quot;Returns a FileDescriptor corresponding to this path.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_toString", "name": "phootwork\\file\\Path::toString", "doc": "&quot;Returns a string representation of this path&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method___toString", "name": "phootwork\\file\\Path::__toString", "doc": "&quot;String representation as pathname&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_upToSegment", "name": "phootwork\\file\\Path::upToSegment", "doc": "&quot;Returns a copy of this path truncated after the given number of segments.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\file\\Path", "fromLink": "phootwork/file/Path.html", "link": "phootwork/file/Path.html#method_equals", "name": "phootwork\\file\\Path::equals", "doc": "&quot;Checks whether both paths point to the same location&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\file\\exception", "fromLink": "phootwork/file/exception.html", "link": "phootwork/file/exception/FileException.html", "name": "phootwork\\file\\exception\\FileException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "phootwork\\file\\exception", "fromLink": "phootwork/file/exception.html", "link": "phootwork/file/exception/FileNotFoundException.html", "name": "phootwork\\file\\exception\\FileNotFoundException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "phootwork\\json", "fromLink": "phootwork/json.html", "link": "phootwork/json/Json.html", "name": "phootwork\\json\\Json", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\json\\Json", "fromLink": "phootwork/json/Json.html", "link": "phootwork/json/Json.html#method_encode", "name": "phootwork\\json\\Json::encode", "doc": "&quot;Returns the JSON representation of a value&quot;"},
                    {"type": "Method", "fromName": "phootwork\\json\\Json", "fromLink": "phootwork/json/Json.html", "link": "phootwork/json/Json.html#method_decode", "name": "phootwork\\json\\Json::decode", "doc": "&quot;Decodes a JSON string to an array.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\json\\Json", "fromLink": "phootwork/json/Json.html", "link": "phootwork/json/Json.html#method_toMap", "name": "phootwork\\json\\Json::toMap", "doc": "&quot;Returns a map collection of the provided json&quot;"},
                    {"type": "Method", "fromName": "phootwork\\json\\Json", "fromLink": "phootwork/json/Json.html", "link": "phootwork/json/Json.html#method_toList", "name": "phootwork\\json\\Json::toList", "doc": "&quot;Returns a list collection of the provided json&quot;"},
                    {"type": "Method", "fromName": "phootwork\\json\\Json", "fromLink": "phootwork/json/Json.html", "link": "phootwork/json/Json.html#method_toCollection", "name": "phootwork\\json\\Json::toCollection", "doc": "&quot;Returns a collection (list or map) of the provided json&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\json", "fromLink": "phootwork/json.html", "link": "phootwork/json/JsonException.html", "name": "phootwork\\json\\JsonException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\json\\JsonException", "fromLink": "phootwork/json/JsonException.html", "link": "phootwork/json/JsonException.html#method___construct", "name": "phootwork\\json\\JsonException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/AbstractArray.html", "name": "phootwork\\lang\\AbstractArray", "doc": "&quot;Superclass containing property and methods shared between\n&lt;code&gt;phootwork\\lang\\ArrayObject&lt;\/code&gt; and &lt;code&gt;phootwork\\class\\AbstractCollection&lt;\/code&gt;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method___construct", "name": "phootwork\\lang\\AbstractArray::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_count", "name": "phootwork\\lang\\AbstractArray::count", "doc": "&quot;Counts the array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_size", "name": "phootwork\\lang\\AbstractArray::size", "doc": "&quot;Return the size of the array.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method___clone", "name": "phootwork\\lang\\AbstractArray::__clone", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_contains", "name": "phootwork\\lang\\AbstractArray::contains", "doc": "&quot;Checks whether the given element is in this array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_isEmpty", "name": "phootwork\\lang\\AbstractArray::isEmpty", "doc": "&quot;Checks whether this array is empty&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_find", "name": "phootwork\\lang\\AbstractArray::find", "doc": "&quot;Searches the array with a given callback and returns the first element if found.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_findLast", "name": "phootwork\\lang\\AbstractArray::findLast", "doc": "&quot;Searches the array with a given callback and returns the last element if found.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_findAll", "name": "phootwork\\lang\\AbstractArray::findAll", "doc": "&quot;Searches the array with a given callback and returns all matching elements.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_search", "name": "phootwork\\lang\\AbstractArray::search", "doc": "&quot;Searches the array for query using the callback function on each element&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_toArray", "name": "phootwork\\lang\\AbstractArray::toArray", "doc": "&quot;Returns the php array type&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_sort", "name": "phootwork\\lang\\AbstractArray::sort", "doc": "&quot;Sorts the array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_every", "name": "phootwork\\lang\\AbstractArray::every", "doc": "&quot;Tests whether all elements in the array pass the test implemented by the provided function.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_some", "name": "phootwork\\lang\\AbstractArray::some", "doc": "&quot;Tests whether at least one element in the array passes the test implemented by the provided function.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_filter", "name": "phootwork\\lang\\AbstractArray::filter", "doc": "&quot;Filters elements using a callback function&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\AbstractArray", "fromLink": "phootwork/lang/AbstractArray.html", "link": "phootwork/lang/AbstractArray.html#method_map", "name": "phootwork\\lang\\AbstractArray::map", "doc": "&quot;Applies the callback to the elements&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/ArrayObject.html", "name": "phootwork\\lang\\ArrayObject", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method___construct", "name": "phootwork\\lang\\ArrayObject::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_getIterator", "name": "phootwork\\lang\\ArrayObject::getIterator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_serialize", "name": "phootwork\\lang\\ArrayObject::serialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_unserialize", "name": "phootwork\\lang\\ArrayObject::unserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_clear", "name": "phootwork\\lang\\ArrayObject::clear", "doc": "&quot;Resets the array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_append", "name": "phootwork\\lang\\ArrayObject::append", "doc": "&quot;Append one or more elements onto the end of array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_prepend", "name": "phootwork\\lang\\ArrayObject::prepend", "doc": "&quot;Prepend one or more elements to the beginning of the array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_shift", "name": "phootwork\\lang\\ArrayObject::shift", "doc": "&quot;Shift an element off the beginning of array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_splice", "name": "phootwork\\lang\\ArrayObject::splice", "doc": "&quot;Remove a portion of the array and replace it with something else&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_join", "name": "phootwork\\lang\\ArrayObject::join", "doc": "&quot;Joins the array with a string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_slice", "name": "phootwork\\lang\\ArrayObject::slice", "doc": "&quot;Extract a slice of the array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_merge", "name": "phootwork\\lang\\ArrayObject::merge", "doc": "&quot;Merges in other values&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_mergeRecursive", "name": "phootwork\\lang\\ArrayObject::mergeRecursive", "doc": "&quot;Merges in other values, recursively&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_keys", "name": "phootwork\\lang\\ArrayObject::keys", "doc": "&quot;Returns the keys of the array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_values", "name": "phootwork\\lang\\ArrayObject::values", "doc": "&quot;Returns the values of the array&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_flip", "name": "phootwork\\lang\\ArrayObject::flip", "doc": "&quot;Flips keys and values&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_offsetSet", "name": "phootwork\\lang\\ArrayObject::offsetSet", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_offsetExists", "name": "phootwork\\lang\\ArrayObject::offsetExists", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_offsetUnset", "name": "phootwork\\lang\\ArrayObject::offsetUnset", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\ArrayObject", "fromLink": "phootwork/lang/ArrayObject.html", "link": "phootwork/lang/ArrayObject.html#method_offsetGet", "name": "phootwork\\lang\\ArrayObject::offsetGet", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/Arrayable.html", "name": "phootwork\\lang\\Arrayable", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\Arrayable", "fromLink": "phootwork/lang/Arrayable.html", "link": "phootwork/lang/Arrayable.html#method_toArray", "name": "phootwork\\lang\\Arrayable::toArray", "doc": "&quot;Array representation of the object&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/Comparable.html", "name": "phootwork\\lang\\Comparable", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\Comparable", "fromLink": "phootwork/lang/Comparable.html", "link": "phootwork/lang/Comparable.html#method_compareTo", "name": "phootwork\\lang\\Comparable::compareTo", "doc": "&quot;Compares to another object&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/ComparableComparator.html", "name": "phootwork\\lang\\ComparableComparator", "doc": "&quot;Class ComparableComparator&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\ComparableComparator", "fromLink": "phootwork/lang/ComparableComparator.html", "link": "phootwork/lang/ComparableComparator.html#method_compare", "name": "phootwork\\lang\\ComparableComparator::compare", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/Comparator.html", "name": "phootwork\\lang\\Comparator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\Comparator", "fromLink": "phootwork/lang/Comparator.html", "link": "phootwork/lang/Comparator.html#method_compare", "name": "phootwork\\lang\\Comparator::compare", "doc": "&quot;Compares two objects&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/StringComparator.html", "name": "phootwork\\lang\\StringComparator", "doc": "&quot;String comparison&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\StringComparator", "fromLink": "phootwork/lang/StringComparator.html", "link": "phootwork/lang/StringComparator.html#method_compare", "name": "phootwork\\lang\\StringComparator::compare", "doc": "&quot;Compares two objects&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang", "fromLink": "phootwork/lang.html", "link": "phootwork/lang/Text.html", "name": "phootwork\\lang\\Text", "doc": "&quot;Object representation of an immutable String&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method___construct", "name": "phootwork\\lang\\Text::__construct", "doc": "&quot;Initializes a String object ad assigns both string and encoding properties\nthe supplied values. $string is cast to a string prior to assignment, and if\n$encoding is not specified, it defaults to mb_internal_encoding(). Throws\nan InvalidArgumentException if the first argument is an array or object\nwithout a __toString method.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method___clone", "name": "phootwork\\lang\\Text::__clone", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_create", "name": "phootwork\\lang\\Text::create", "doc": "&quot;Static initializing a String object.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_getEncoding", "name": "phootwork\\lang\\Text::getEncoding", "doc": "&quot;Returns the used encoding&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_length", "name": "phootwork\\lang\\Text::length", "doc": "&quot;Get string length&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_append", "name": "phootwork\\lang\\Text::append", "doc": "&quot;Appends &lt;code&gt;$string&lt;\/code&gt; and returns as a new &lt;code&gt;Text&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_prepend", "name": "phootwork\\lang\\Text::prepend", "doc": "&quot;Prepends &lt;code&gt;$string&lt;\/code&gt; and returns as a new &lt;code&gt;Text&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_insert", "name": "phootwork\\lang\\Text::insert", "doc": "&quot;Inserts a substring at the given index&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_slice", "name": "phootwork\\lang\\Text::slice", "doc": "&quot;Slices a piece of the string from a given offset with a specified length.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_substring", "name": "phootwork\\lang\\Text::substring", "doc": "&quot;Slices a piece of the string from a given start to an end.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_countSubstring", "name": "phootwork\\lang\\Text::countSubstring", "doc": "&quot;Count the number of substring occurrences.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_replace", "name": "phootwork\\lang\\Text::replace", "doc": "&quot;Replace all occurrences of the search string with the replacement string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_supplant", "name": "phootwork\\lang\\Text::supplant", "doc": "&quot;Replaces all occurences of given replacement map. Keys will be replaced with its values.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_splice", "name": "phootwork\\lang\\Text::splice", "doc": "&quot;Replace text within a portion of a string.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_trim", "name": "phootwork\\lang\\Text::trim", "doc": "&quot;Strip whitespace (or other characters) from the beginning and end of the string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_trimStart", "name": "phootwork\\lang\\Text::trimStart", "doc": "&quot;Strip whitespace (or other characters) from the beginning of the string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_trimEnd", "name": "phootwork\\lang\\Text::trimEnd", "doc": "&quot;Strip whitespace (or other characters) from the end of the string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_pad", "name": "phootwork\\lang\\Text::pad", "doc": "&quot;Adds padding to the start and end&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_padStart", "name": "phootwork\\lang\\Text::padStart", "doc": "&quot;Adds padding to the start&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_padEnd", "name": "phootwork\\lang\\Text::padEnd", "doc": "&quot;Adds padding to the end&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_ensureStart", "name": "phootwork\\lang\\Text::ensureStart", "doc": "&quot;Ensures a given substring at the start of the string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_ensureEnd", "name": "phootwork\\lang\\Text::ensureEnd", "doc": "&quot;Ensures a given substring at the end of the string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_wrapWords", "name": "phootwork\\lang\\Text::wrapWords", "doc": "&quot;Returns a copy of the string wrapped at a given number of characters&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_repeat", "name": "phootwork\\lang\\Text::repeat", "doc": "&quot;Repeat the string $times times. If $times is 0, it returns &#039;&#039;.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_reverse", "name": "phootwork\\lang\\Text::reverse", "doc": "&quot;Reverses the character order&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_truncate", "name": "phootwork\\lang\\Text::truncate", "doc": "&quot;Truncates the string with a substring and ensures it doesn&#039;t exceed the given length&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method_toString", "name": "phootwork\\lang\\Text::toString", "doc": "&quot;Returns the native string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\Text", "fromLink": "phootwork/lang/Text.html", "link": "phootwork/lang/Text.html#method___toString", "name": "phootwork\\lang\\Text::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang\\inflector", "fromLink": "phootwork/lang/inflector.html", "link": "phootwork/lang/inflector/Inflector.html", "name": "phootwork\\lang\\inflector\\Inflector", "doc": "&quot;Standard replacement English pluralizer class. Based on the links below&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\inflector\\Inflector", "fromLink": "phootwork/lang/inflector/Inflector.html", "link": "phootwork/lang/inflector/Inflector.html#method___construct", "name": "phootwork\\lang\\inflector\\Inflector::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\Inflector", "fromLink": "phootwork/lang/inflector/Inflector.html", "link": "phootwork/lang/inflector/Inflector.html#method_getPluralForm", "name": "phootwork\\lang\\inflector\\Inflector::getPluralForm", "doc": "&quot;Generate a plural name based on the passed in root.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\Inflector", "fromLink": "phootwork/lang/inflector/Inflector.html", "link": "phootwork/lang/inflector/Inflector.html#method_getSingularForm", "name": "phootwork\\lang\\inflector\\Inflector::getSingularForm", "doc": "&quot;Generate a singular name based on the passed in root.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\Inflector", "fromLink": "phootwork/lang/inflector/Inflector.html", "link": "phootwork/lang/inflector/Inflector.html#method_isPlural", "name": "phootwork\\lang\\inflector\\Inflector::isPlural", "doc": "&quot;Check if $root word is plural.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\Inflector", "fromLink": "phootwork/lang/inflector/Inflector.html", "link": "phootwork/lang/inflector/Inflector.html#method_isSingular", "name": "phootwork\\lang\\inflector\\Inflector::isSingular", "doc": "&quot;Check if $root word is singular.&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\lang\\inflector", "fromLink": "phootwork/lang/inflector.html", "link": "phootwork/lang/inflector/InflectorInterface.html", "name": "phootwork\\lang\\inflector\\InflectorInterface", "doc": "&quot;The generic interface to create a plural form of a name.&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_getPluralForm", "name": "phootwork\\lang\\inflector\\InflectorInterface::getPluralForm", "doc": "&quot;Generate a plural name based on the passed in root.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_getSingularForm", "name": "phootwork\\lang\\inflector\\InflectorInterface::getSingularForm", "doc": "&quot;Generate a singular name based on the passed in root.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_isPlural", "name": "phootwork\\lang\\inflector\\InflectorInterface::isPlural", "doc": "&quot;Check if $root word is plural.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\inflector\\InflectorInterface", "fromLink": "phootwork/lang/inflector/InflectorInterface.html", "link": "phootwork/lang/inflector/InflectorInterface.html#method_isSingular", "name": "phootwork\\lang\\inflector\\InflectorInterface::isSingular", "doc": "&quot;Check if $root word is singular.&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/AccessorsPart.html", "name": "phootwork\\lang\\parts\\AccessorsPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\AccessorsPart", "fromLink": "phootwork/lang/parts/AccessorsPart.html", "link": "phootwork/lang/parts/AccessorsPart.html#method_get", "name": "phootwork\\lang\\parts\\AccessorsPart::get", "doc": "&quot;Returns the element at the given index (or null if the index isn&#039;t present)&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/AddPart.html", "name": "phootwork\\lang\\parts\\AddPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\AddPart", "fromLink": "phootwork/lang/parts/AddPart.html", "link": "phootwork/lang/parts/AddPart.html#method_add", "name": "phootwork\\lang\\parts\\AddPart::add", "doc": "&quot;Adds one or more elements to that array&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/ArrayConversionsPart.html", "name": "phootwork\\lang\\parts\\ArrayConversionsPart", "doc": "&quot;Text methods for array\/ArrayObject conversions&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\ArrayConversionsPart", "fromLink": "phootwork/lang/parts/ArrayConversionsPart.html", "link": "phootwork/lang/parts/ArrayConversionsPart.html#method_split", "name": "phootwork\\lang\\parts\\ArrayConversionsPart::split", "doc": "&quot;Splits the string by string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\ArrayConversionsPart", "fromLink": "phootwork/lang/parts/ArrayConversionsPart.html", "link": "phootwork/lang/parts/ArrayConversionsPart.html#method_join", "name": "phootwork\\lang\\parts\\ArrayConversionsPart::join", "doc": "&quot;Join array elements with a string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\ArrayConversionsPart", "fromLink": "phootwork/lang/parts/ArrayConversionsPart.html", "link": "phootwork/lang/parts/ArrayConversionsPart.html#method_chunk", "name": "phootwork\\lang\\parts\\ArrayConversionsPart::chunk", "doc": "&quot;Convert the string to an array&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/CheckerPart.html", "name": "phootwork\\lang\\parts\\CheckerPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isEmpty", "name": "phootwork\\lang\\parts\\CheckerPart::isEmpty", "doc": "&quot;Checks if the string is empty&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isAlphanumeric", "name": "phootwork\\lang\\parts\\CheckerPart::isAlphanumeric", "doc": "&quot;Check if the string contains only alphanumeric characters.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isAlphabetic", "name": "phootwork\\lang\\parts\\CheckerPart::isAlphabetic", "doc": "&quot;Check if the string contains only alphanumeric characters.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isNumeric", "name": "phootwork\\lang\\parts\\CheckerPart::isNumeric", "doc": "&quot;Check if the string contains only numeric characters.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isPunctuation", "name": "phootwork\\lang\\parts\\CheckerPart::isPunctuation", "doc": "&quot;Check if the string contains only characters which are not whitespace or an alphanumeric.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isSpace", "name": "phootwork\\lang\\parts\\CheckerPart::isSpace", "doc": "&quot;Check if the string contains only space characters.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isLowerCase", "name": "phootwork\\lang\\parts\\CheckerPart::isLowerCase", "doc": "&quot;Check if the string contains only lower case characters.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isUpperCase", "name": "phootwork\\lang\\parts\\CheckerPart::isUpperCase", "doc": "&quot;Check if the string contains only upper case characters.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isSingular", "name": "phootwork\\lang\\parts\\CheckerPart::isSingular", "doc": "&quot;Check if a string is singular form.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\CheckerPart", "fromLink": "phootwork/lang/parts/CheckerPart.html", "link": "phootwork/lang/parts/CheckerPart.html#method_isPlural", "name": "phootwork\\lang\\parts\\CheckerPart::isPlural", "doc": "&quot;Check if a string is plural form.&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/ComparisonPart.html", "name": "phootwork\\lang\\parts\\ComparisonPart", "doc": "&quot;Text methods to perform string and Text object comparison&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\ComparisonPart", "fromLink": "phootwork/lang/parts/ComparisonPart.html", "link": "phootwork/lang/parts/ComparisonPart.html#method_compareTo", "name": "phootwork\\lang\\parts\\ComparisonPart::compareTo", "doc": "&quot;Compares this string to another&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\ComparisonPart", "fromLink": "phootwork/lang/parts/ComparisonPart.html", "link": "phootwork/lang/parts/ComparisonPart.html#method_compareCaseInsensitive", "name": "phootwork\\lang\\parts\\ComparisonPart::compareCaseInsensitive", "doc": "&quot;Compares this string to another string, ignoring the case&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\ComparisonPart", "fromLink": "phootwork/lang/parts/ComparisonPart.html", "link": "phootwork/lang/parts/ComparisonPart.html#method_compare", "name": "phootwork\\lang\\parts\\ComparisonPart::compare", "doc": "&quot;Compares this string to another&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\ComparisonPart", "fromLink": "phootwork/lang/parts/ComparisonPart.html", "link": "phootwork/lang/parts/ComparisonPart.html#method_equals", "name": "phootwork\\lang\\parts\\ComparisonPart::equals", "doc": "&quot;Checks whether the string and the given object are equal&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\ComparisonPart", "fromLink": "phootwork/lang/parts/ComparisonPart.html", "link": "phootwork/lang/parts/ComparisonPart.html#method_equalsIgnoreCase", "name": "phootwork\\lang\\parts\\ComparisonPart::equalsIgnoreCase", "doc": "&quot;Checks whether the string and the given object are equal ignoring the case&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/EachPart.html", "name": "phootwork\\lang\\parts\\EachPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\EachPart", "fromLink": "phootwork/lang/parts/EachPart.html", "link": "phootwork/lang/parts/EachPart.html#method_each", "name": "phootwork\\lang\\parts\\EachPart::each", "doc": "&quot;Iterates the array and calls the callback function with the current item as parameter&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/IndexFindersPart.html", "name": "phootwork\\lang\\parts\\IndexFindersPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\IndexFindersPart", "fromLink": "phootwork/lang/parts/IndexFindersPart.html", "link": "phootwork/lang/parts/IndexFindersPart.html#method_find", "name": "phootwork\\lang\\parts\\IndexFindersPart::find", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\IndexFindersPart", "fromLink": "phootwork/lang/parts/IndexFindersPart.html", "link": "phootwork/lang/parts/IndexFindersPart.html#method_findLast", "name": "phootwork\\lang\\parts\\IndexFindersPart::findLast", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\IndexFindersPart", "fromLink": "phootwork/lang/parts/IndexFindersPart.html", "link": "phootwork/lang/parts/IndexFindersPart.html#method_indexOf", "name": "phootwork\\lang\\parts\\IndexFindersPart::indexOf", "doc": "&quot;Returns the index of the given element or null if the element can&#039;t be found&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\IndexFindersPart", "fromLink": "phootwork/lang/parts/IndexFindersPart.html", "link": "phootwork/lang/parts/IndexFindersPart.html#method_findLastIndex", "name": "phootwork\\lang\\parts\\IndexFindersPart::findLastIndex", "doc": "&quot;Searches the array with a given callback and returns the index for the last element if found.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\IndexFindersPart", "fromLink": "phootwork/lang/parts/IndexFindersPart.html", "link": "phootwork/lang/parts/IndexFindersPart.html#method_findIndex", "name": "phootwork\\lang\\parts\\IndexFindersPart::findIndex", "doc": "&quot;Searches the array with a given callback and returns the index for the first element if found.&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/InsertPart.html", "name": "phootwork\\lang\\parts\\InsertPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\InsertPart", "fromLink": "phootwork/lang/parts/InsertPart.html", "link": "phootwork/lang/parts/InsertPart.html#method_add", "name": "phootwork\\lang\\parts\\InsertPart::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\InsertPart", "fromLink": "phootwork/lang/parts/InsertPart.html", "link": "phootwork/lang/parts/InsertPart.html#method_insert", "name": "phootwork\\lang\\parts\\InsertPart::insert", "doc": "&quot;Insert one element at the given index&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/InternalPart.html", "name": "phootwork\\lang\\parts\\InternalPart", "doc": "&quot;Internal Text methods&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\InternalPart", "fromLink": "phootwork/lang/parts/InternalPart.html", "link": "phootwork/lang/parts/InternalPart.html#method_length", "name": "phootwork\\lang\\parts\\InternalPart::length", "doc": "&quot;&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/PopPart.html", "name": "phootwork\\lang\\parts\\PopPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\PopPart", "fromLink": "phootwork/lang/parts/PopPart.html", "link": "phootwork/lang/parts/PopPart.html#method_pop", "name": "phootwork\\lang\\parts\\PopPart::pop", "doc": "&quot;Pop the element off the end of array&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/ReducePart.html", "name": "phootwork\\lang\\parts\\ReducePart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\ReducePart", "fromLink": "phootwork/lang/parts/ReducePart.html", "link": "phootwork/lang/parts/ReducePart.html#method_reduce", "name": "phootwork\\lang\\parts\\ReducePart::reduce", "doc": "&quot;Iterative reduction of this array or collection with the help of a callback function. The callback\nfunction takes two parameters, the first is the carry, the second the current item, with this\nsignature: mixed callback(mixed $carry, mixed $item)&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/RemovePart.html", "name": "phootwork\\lang\\parts\\RemovePart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\RemovePart", "fromLink": "phootwork/lang/parts/RemovePart.html", "link": "phootwork/lang/parts/RemovePart.html#method_remove", "name": "phootwork\\lang\\parts\\RemovePart::remove", "doc": "&quot;Removes one or more elements from the array&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/ReversePart.html", "name": "phootwork\\lang\\parts\\ReversePart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\ReversePart", "fromLink": "phootwork/lang/parts/ReversePart.html", "link": "phootwork/lang/parts/ReversePart.html#method_reverse", "name": "phootwork\\lang\\parts\\ReversePart::reverse", "doc": "&quot;Reverses the order of all elements&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/SearchPart.html", "name": "phootwork\\lang\\parts\\SearchPart", "doc": "&quot;Text searching methods&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_length", "name": "phootwork\\lang\\parts\\SearchPart::length", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_at", "name": "phootwork\\lang\\parts\\SearchPart::at", "doc": "&quot;Returns the character at the given zero-related index&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_chars", "name": "phootwork\\lang\\parts\\SearchPart::chars", "doc": "&quot;Returns an ArrayObject consisting of the characters in the string.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_indexOf", "name": "phootwork\\lang\\parts\\SearchPart::indexOf", "doc": "&quot;Returns the index of a given string, starting at the optional zero-related offset&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_lastIndexOf", "name": "phootwork\\lang\\parts\\SearchPart::lastIndexOf", "doc": "&quot;Returns the last index of a given string, starting at the optional offset&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_startsWith", "name": "phootwork\\lang\\parts\\SearchPart::startsWith", "doc": "&quot;Checks whether the string starts with the given string. Case sensitive!&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_startsWithIgnoreCase", "name": "phootwork\\lang\\parts\\SearchPart::startsWithIgnoreCase", "doc": "&quot;Checks whether the string starts with the given string. Ignores case.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_endsWith", "name": "phootwork\\lang\\parts\\SearchPart::endsWith", "doc": "&quot;Checks whether the string ends with the given string. Case sensitive!&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_endsWithIgnoreCase", "name": "phootwork\\lang\\parts\\SearchPart::endsWithIgnoreCase", "doc": "&quot;Checks whether the string ends with the given string. Ingores case.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_contains", "name": "phootwork\\lang\\parts\\SearchPart::contains", "doc": "&quot;Checks whether the given string occurs&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SearchPart", "fromLink": "phootwork/lang/parts/SearchPart.html", "link": "phootwork/lang/parts/SearchPart.html#method_match", "name": "phootwork\\lang\\parts\\SearchPart::match", "doc": "&quot;Performs a regular expression matching with the given regexp&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/SortAssocPart.html", "name": "phootwork\\lang\\parts\\SortAssocPart", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\SortAssocPart", "fromLink": "phootwork/lang/parts/SortAssocPart.html", "link": "phootwork/lang/parts/SortAssocPart.html#method_sortAssoc", "name": "phootwork\\lang\\parts\\SortAssocPart::sortAssoc", "doc": "&quot;Sorts the array and persisting key-value pairs&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\SortAssocPart", "fromLink": "phootwork/lang/parts/SortAssocPart.html", "link": "phootwork/lang/parts/SortAssocPart.html#method_sortKeys", "name": "phootwork\\lang\\parts\\SortAssocPart::sortKeys", "doc": "&quot;Sorts the array by keys&quot;"},
            
            {"type": "Trait", "fromName": "phootwork\\lang\\parts", "fromLink": "phootwork/lang/parts.html", "link": "phootwork/lang/parts/TransformationsPart.html", "name": "phootwork\\lang\\parts\\TransformationsPart", "doc": "&quot;Text transformation methods&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_substring", "name": "phootwork\\lang\\parts\\TransformationsPart::substring", "doc": "&quot;Slices a piece of the string from a given start to an end.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_split", "name": "phootwork\\lang\\parts\\TransformationsPart::split", "doc": "&quot;Splits the string by string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_trim", "name": "phootwork\\lang\\parts\\TransformationsPart::trim", "doc": "&quot;Strip whitespace (or other characters) from the beginning and end of the string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_contains", "name": "phootwork\\lang\\parts\\TransformationsPart::contains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_replace", "name": "phootwork\\lang\\parts\\TransformationsPart::replace", "doc": "&quot;Replace all occurrences of the search string with the replacement string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toLowerCase", "name": "phootwork\\lang\\parts\\TransformationsPart::toLowerCase", "doc": "&quot;Transforms the string to lowercase&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toLowerCaseFirst", "name": "phootwork\\lang\\parts\\TransformationsPart::toLowerCaseFirst", "doc": "&quot;Transforms the string to first character lowercased&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toUpperCase", "name": "phootwork\\lang\\parts\\TransformationsPart::toUpperCase", "doc": "&quot;Transforms the string to uppercase&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toUpperCaseFirst", "name": "phootwork\\lang\\parts\\TransformationsPart::toUpperCaseFirst", "doc": "&quot;Transforms the string to first character uppercased&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toCapitalCase", "name": "phootwork\\lang\\parts\\TransformationsPart::toCapitalCase", "doc": "&quot;Transforms the string to only its first character capitalized.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toCapitalCaseWords", "name": "phootwork\\lang\\parts\\TransformationsPart::toCapitalCaseWords", "doc": "&quot;Transforms the string with the words capitalized.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toCamelCase", "name": "phootwork\\lang\\parts\\TransformationsPart::toCamelCase", "doc": "&quot;Converts this string into camelCase. Numbers are considered as part of its previous piece.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toSnakeCase", "name": "phootwork\\lang\\parts\\TransformationsPart::toSnakeCase", "doc": "&quot;Converts this string into snake_case. Numbers are considered as part of its previous piece.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toStudlyCase", "name": "phootwork\\lang\\parts\\TransformationsPart::toStudlyCase", "doc": "&quot;Converts this string into StudlyCase. Numbers are considered as part of its previous piece.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toKebabCase", "name": "phootwork\\lang\\parts\\TransformationsPart::toKebabCase", "doc": "&quot;Convert this string into kebab-case. Numbers are considered as part of its previous piece.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toPlural", "name": "phootwork\\lang\\parts\\TransformationsPart::toPlural", "doc": "&quot;Get the plural form of the Text object.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toSingular", "name": "phootwork\\lang\\parts\\TransformationsPart::toSingular", "doc": "&quot;Get the singular form of the Text object.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toSpaces", "name": "phootwork\\lang\\parts\\TransformationsPart::toSpaces", "doc": "&quot;Converts each tab in the string to some number of spaces, as defined by\n$tabLength. By default, each tab is converted to 4 consecutive spaces.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\lang\\parts\\TransformationsPart", "fromLink": "phootwork/lang/parts/TransformationsPart.html", "link": "phootwork/lang/parts/TransformationsPart.html#method_toTabs", "name": "phootwork\\lang\\parts\\TransformationsPart::toTabs", "doc": "&quot;Converts each occurrence of some consecutive number of spaces, as\ndefined by $tabLength, to a tab. By default, each 4 consecutive spaces\nare converted to a tab.&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\tokenizer", "fromLink": "phootwork/tokenizer.html", "link": "phootwork/tokenizer/PhpTokenizer.html", "name": "phootwork\\tokenizer\\PhpTokenizer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\tokenizer\\PhpTokenizer", "fromLink": "phootwork/tokenizer/PhpTokenizer.html", "link": "phootwork/tokenizer/PhpTokenizer.html#method___construct", "name": "phootwork\\tokenizer\\PhpTokenizer::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\tokenizer\\PhpTokenizer", "fromLink": "phootwork/tokenizer/PhpTokenizer.html", "link": "phootwork/tokenizer/PhpTokenizer.html#method_tokenize", "name": "phootwork\\tokenizer\\PhpTokenizer::tokenize", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\tokenizer", "fromLink": "phootwork/tokenizer.html", "link": "phootwork/tokenizer/Token.html", "name": "phootwork\\tokenizer\\Token", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\tokenizer\\Token", "fromLink": "phootwork/tokenizer/Token.html", "link": "phootwork/tokenizer/Token.html#method___construct", "name": "phootwork\\tokenizer\\Token::__construct", "doc": "&quot;Token constructor.&quot;"},
                    {"type": "Method", "fromName": "phootwork\\tokenizer\\Token", "fromLink": "phootwork/tokenizer/Token.html", "link": "phootwork/tokenizer/Token.html#method_accept", "name": "phootwork\\tokenizer\\Token::accept", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\tokenizer", "fromLink": "phootwork/tokenizer.html", "link": "phootwork/tokenizer/TokenCollection.html", "name": "phootwork\\tokenizer\\TokenCollection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\tokenizer\\TokenCollection", "fromLink": "phootwork/tokenizer/TokenCollection.html", "link": "phootwork/tokenizer/TokenCollection.html#method_get", "name": "phootwork\\tokenizer\\TokenCollection::get", "doc": "&quot;Retrieves a token at the given index&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\tokenizer", "fromLink": "phootwork/tokenizer.html", "link": "phootwork/tokenizer/TokenVisitorInterface.html", "name": "phootwork\\tokenizer\\TokenVisitorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\tokenizer\\TokenVisitorInterface", "fromLink": "phootwork/tokenizer/TokenVisitorInterface.html", "link": "phootwork/tokenizer/TokenVisitorInterface.html#method_visitToken", "name": "phootwork\\tokenizer\\TokenVisitorInterface::visitToken", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\xml", "fromLink": "phootwork/xml.html", "link": "phootwork/xml/XmlParser.html", "name": "phootwork\\xml\\XmlParser", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method___construct", "name": "phootwork\\xml\\XmlParser::__construct", "doc": "&quot;Creates a new XML parser&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method___destruct", "name": "phootwork\\xml\\XmlParser::__destruct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method_setOption", "name": "phootwork\\xml\\XmlParser::setOption", "doc": "&quot;Set an option for the parser&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method_getOption", "name": "phootwork\\xml\\XmlParser::getOption", "doc": "&quot;Gets the value for an option&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method_addVisitor", "name": "phootwork\\xml\\XmlParser::addVisitor", "doc": "&quot;Adds a visitor&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method_removeVisitor", "name": "phootwork\\xml\\XmlParser::removeVisitor", "doc": "&quot;Removes a visitor&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method_parse", "name": "phootwork\\xml\\XmlParser::parse", "doc": "&quot;Parses a string&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParser", "fromLink": "phootwork/xml/XmlParser.html", "link": "phootwork/xml/XmlParser.html#method_parseFile", "name": "phootwork\\xml\\XmlParser::parseFile", "doc": "&quot;Parses a file&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\xml", "fromLink": "phootwork/xml.html", "link": "phootwork/xml/XmlParserNoopVisitor.html", "name": "phootwork\\xml\\XmlParserNoopVisitor", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\xml\\XmlParserNoopVisitor", "fromLink": "phootwork/xml/XmlParserNoopVisitor.html", "link": "phootwork/xml/XmlParserNoopVisitor.html#method_visitElementEnd", "name": "phootwork\\xml\\XmlParserNoopVisitor::visitElementEnd", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserNoopVisitor", "fromLink": "phootwork/xml/XmlParserNoopVisitor.html", "link": "phootwork/xml/XmlParserNoopVisitor.html#method_visitProcessingInstruction", "name": "phootwork\\xml\\XmlParserNoopVisitor::visitProcessingInstruction", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserNoopVisitor", "fromLink": "phootwork/xml/XmlParserNoopVisitor.html", "link": "phootwork/xml/XmlParserNoopVisitor.html#method_visitNotationDeclaration", "name": "phootwork\\xml\\XmlParserNoopVisitor::visitNotationDeclaration", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserNoopVisitor", "fromLink": "phootwork/xml/XmlParserNoopVisitor.html", "link": "phootwork/xml/XmlParserNoopVisitor.html#method_visitUnparsedEntityDeclaration", "name": "phootwork\\xml\\XmlParserNoopVisitor::visitUnparsedEntityDeclaration", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserNoopVisitor", "fromLink": "phootwork/xml/XmlParserNoopVisitor.html", "link": "phootwork/xml/XmlParserNoopVisitor.html#method_visitElementStart", "name": "phootwork\\xml\\XmlParserNoopVisitor::visitElementStart", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserNoopVisitor", "fromLink": "phootwork/xml/XmlParserNoopVisitor.html", "link": "phootwork/xml/XmlParserNoopVisitor.html#method_visitCharacterData", "name": "phootwork\\xml\\XmlParserNoopVisitor::visitCharacterData", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\xml", "fromLink": "phootwork/xml.html", "link": "phootwork/xml/XmlParserVisitorInterface.html", "name": "phootwork\\xml\\XmlParserVisitorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitElementStart", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitElementStart", "doc": "&quot;visits the start of an element&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitElementEnd", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitElementEnd", "doc": "&quot;visits the end of an element&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitCharacterData", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitCharacterData", "doc": "&quot;visits character data&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitProcessingInstruction", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitProcessingInstruction", "doc": "&quot;visits a processing instruction&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitNotationDeclaration", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitNotationDeclaration", "doc": "&quot;visits a notation declaration&quot;"},
                    {"type": "Method", "fromName": "phootwork\\xml\\XmlParserVisitorInterface", "fromLink": "phootwork/xml/XmlParserVisitorInterface.html", "link": "phootwork/xml/XmlParserVisitorInterface.html#method_visitUnparsedEntityDeclaration", "name": "phootwork\\xml\\XmlParserVisitorInterface::visitUnparsedEntityDeclaration", "doc": "&quot;visits an unparsed entity declaration&quot;"},
            
            {"type": "Class", "fromName": "phootwork\\xml\\exception", "fromLink": "phootwork/xml/exception.html", "link": "phootwork/xml/exception/XmlException.html", "name": "phootwork\\xml\\exception\\XmlException", "doc": "&quot;&quot;"},
                    
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


